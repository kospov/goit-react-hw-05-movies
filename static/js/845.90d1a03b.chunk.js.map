{"version":3,"file":"static/js/845.90d1a03b.chunk.js","mappings":"8LACA,EAAuB,wB,SC0BvB,EAvBkB,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,eACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,GACCA,EAAeG,KAAI,SAAAC,GACjB,OACE,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMC,GAAI,UAAYH,EAAGI,GAAIC,MAAOR,EAApC,SACGG,EAAGM,SAFoBN,EAAGI,GAMlC,KAGR,C,uHCpBD,EAAuB,iC,SC0BvB,EArB2B,WACzB,OAAuBG,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgBL,EAAaM,IAAI,SAEjB,OAAlBD,IAEJE,EAAAA,EAAAA,IAAmBF,GAChBG,MAAK,SAAAN,GAAY,OAAIC,EAAgBD,EAApB,IACjBO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACV,KAGF,eAAIP,UAAWC,EAAf,UACE,SAACmB,EAAA,EAAD,CAAWzB,eAAgBc,KAGhC,C,8KCvBKY,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAsB,WACjC,OAAOD,IAAAA,IACA,sBAAuB,CAC1BE,OAAQ,CACNC,QAASJ,KAGZN,MAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IACbZ,OAAM,SAAAa,GAAK,OAAIX,QAAQC,IAAIU,EAAhB,GACf,EAEYf,EAAqB,SAAAgB,GAChC,OAAOR,IAAAA,IACA,gBAAiB,CACpBE,OAAQ,CACNC,QAASJ,EACTS,MAAAA,KAGHf,MAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IACbZ,OAAM,SAAAa,GAAK,OAAIX,QAAQC,IAAIU,EAAhB,GACf,EAEYE,EAAiB,SAAAC,GAC5B,OAAOV,IAAAA,IAAA,iBACUU,GAAY,CACzBR,OAAQ,CACNC,QAASJ,KAGZN,MAAK,SAAAW,GAAQ,OAAIA,EAASC,IAAb,GACjB,EAEYM,EAAoB,SAAAD,GAC/B,OAAOV,IAAAA,IAAA,iBACUU,EADV,YAC8B,CACjCR,OAAQ,CACNC,QAASJ,KAGZN,MAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKO,IAAlB,IACblB,OAAM,SAAAa,GAAK,OAAIX,QAAQC,IAAIU,EAAhB,GACf,EAEYM,EAAuB,SAAAH,GAClC,OAAOV,IAAAA,IAAA,iBACUU,EADV,YAC8B,CACjCR,OAAQ,CACNC,QAASJ,EACTW,SAAAA,KAGHjB,MAAK,SAAAW,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IACbZ,OAAM,SAAAa,GAAK,OAAIX,QAAQC,IAAIU,EAAhB,GACf,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchedMoviesList/SearchedMoviesList.module.css?ad45","components/SearchedMoviesList/SearchedMoviesList.jsx","utils/fetch-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieItem_item__iPuYx\"};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './MovieItem.module.css';\n\nconst MovieItem = ({ searchedMovies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {searchedMovies &&\n        searchedMovies.map(el => {\n          return (\n            <li className={s.item} key={el.id}>\n              <Link to={'/movie/' + el.id} state={location}>\n                {el.title}\n              </Link>\n            </li>\n          );\n        })}\n    </>\n  );\n};\n\nMovieItem.propTypes = {\n  searchedMovies: PropTypes.array,\n};\n\nexport default MovieItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"SearchedMoviesList_list__liNYp\",\"item\":\"SearchedMoviesList_item__VWqP0\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchQueriedMovies } from '../../utils/fetch-api';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport s from './SearchedMoviesList.module.css';\n\nconst SearchedMoviesList = () => {\n  const [searchParams] = useSearchParams();\n  const [queriedMovie, setQueriedMovie] = useState(null);\n\n  useEffect(() => {\n    const queryForMovie = searchParams.get('query');\n\n    if (queryForMovie === null) return;\n\n    fetchQueriedMovies(queryForMovie)\n      .then(queriedMovie => setQueriedMovie(queriedMovie))\n      .catch(err => console.log(err));\n  }, [searchParams]);\n\n  return (\n    <ul className={s.list}>\n      <MovieItem searchedMovies={queriedMovie} />\n    </ul>\n  );\n};\n\nexport default SearchedMoviesList;\n","import axios from 'axios';\n\nconst API_KEY = '905309a28b68a9146011759181c1a3d1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = () => {\n  return axios\n    .get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n\nexport const fetchQueriedMovies = query => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n\nexport const fetchMovieById = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport const fetchCastForMovie = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.cast)\n    .catch(error => console.log(error));\n};\n\nexport const fetchReviewsForMovie = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        movie_id,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n"],"names":["searchedMovies","location","useLocation","map","el","className","s","to","id","state","title","useSearchParams","searchParams","useState","queriedMovie","setQueriedMovie","useEffect","queryForMovie","get","fetchQueriedMovies","then","catch","err","console","log","MovieItem","API_KEY","axios","fetchTrendingMovies","params","api_key","response","data","results","error","query","fetchMovieById","movie_id","fetchCastForMovie","cast","fetchReviewsForMovie"],"sourceRoot":""}