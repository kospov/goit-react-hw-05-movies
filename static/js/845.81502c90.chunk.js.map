{"version":3,"file":"static/js/845.81502c90.chunk.js","mappings":"uOACA,EAAuB,iCAAvB,EAA+D,iC,SCmC/D,EA/B2B,WACzB,OAAuBA,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgBP,EAAaQ,IAAI,SAEjB,IAAlBD,IAEJE,EAAAA,EAAAA,IAAmBF,GAAeG,MAAK,SAAAR,GAAY,OACjDC,EAAgBD,EADiC,GAGpD,GAAE,CAACF,KAGF,eAAIW,UAAWC,EAAf,SACGV,GACCA,EAAaW,KAAI,SAAAC,GACf,OACE,eAAIH,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMG,GAAI,UAAYD,EAAGE,GAAIC,MAAOb,EAApC,SACGU,EAAGI,SAFoBJ,EAAGE,GAMlC,KAGR,C,8KChCKG,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAsB,WACjC,OAAOD,IAAAA,IACA,sBAAuB,CAC1BE,OAAQ,CACNC,QAASJ,KAGZT,MAAK,SAAAc,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEYnB,EAAqB,SAAAsB,GAChC,OAAOX,IAAAA,IACA,gBAAiB,CACpBE,OAAQ,CACNC,QAASJ,EACTY,MAAAA,KAGHrB,MAAK,SAAAc,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEYI,EAAiB,SAAAC,GAC5B,OAAOb,IAAAA,IAAA,iBACUa,GAAY,CACzBX,OAAQ,CACNC,QAASJ,KAGZT,MAAK,SAAAc,GAAQ,OAAIA,EAASC,IAAb,GACjB,EAEYS,EAAoB,SAAAD,GAC/B,OAAOb,IAAAA,IAAA,iBACUa,EADV,YAC8B,CACjCX,OAAQ,CACNC,QAASJ,KAGZT,MAAK,SAAAc,GAAQ,OAAIA,EAASC,KAAKU,IAAlB,IACbR,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEYQ,EAAuB,SAAAH,GAClC,OAAOb,IAAAA,IAAA,iBACUa,EADV,YAC8B,CACjCX,OAAQ,CACNC,QAASJ,EACTc,SAAAA,KAGHvB,MAAK,SAAAc,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,C","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchedMoviesList/SearchedMoviesList.module.css?ad45","components/SearchedMoviesList/SearchedMoviesList.jsx","utils/fetch-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"SearchedMoviesList_list__liNYp\",\"item\":\"SearchedMoviesList_item__VWqP0\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchQueriedMovies } from '../../utils/fetch-api';\nimport s from './SearchedMoviesList.module.css';\n\nconst SearchedMoviesList = () => {\n  const [searchParams] = useSearchParams();\n  const [queriedMovie, setQueriedMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const queryForMovie = searchParams.get('query');\n\n    if (queryForMovie === 0) return;\n\n    fetchQueriedMovies(queryForMovie).then(queriedMovie =>\n      setQueriedMovie(queriedMovie)\n    );\n  }, [searchParams]);\n\n  return (\n    <ul className={s.list}>\n      {queriedMovie &&\n        queriedMovie.map(el => {\n          return (\n            <li className={s.item} key={el.id}>\n              <Link to={'/movie/' + el.id} state={location}>\n                {el.title}\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default SearchedMoviesList;\n","import axios from 'axios';\n\nconst API_KEY = '905309a28b68a9146011759181c1a3d1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = () => {\n  return axios\n    .get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n\nexport const fetchQueriedMovies = query => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n\nexport const fetchMovieById = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport const fetchCastForMovie = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.cast)\n    .catch(error => console.log(error));\n};\n\nexport const fetchReviewsForMovie = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        movie_id,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n"],"names":["useSearchParams","searchParams","useState","queriedMovie","setQueriedMovie","location","useLocation","useEffect","queryForMovie","get","fetchQueriedMovies","then","className","s","map","el","to","id","state","title","API_KEY","axios","fetchTrendingMovies","params","api_key","response","data","results","catch","error","console","log","query","fetchMovieById","movie_id","fetchCastForMovie","cast","fetchReviewsForMovie"],"sourceRoot":""}