{"version":3,"file":"static/js/123.a2c023a8.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.js","utils/fetch-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieInfo_container__MNRAo\",\"containerMovie\":\"MovieInfo_containerMovie__6DJpH\",\"btn\":\"MovieInfo_btn__zw5mn\",\"poster\":\"MovieInfo_poster__haZsf\",\"discription\":\"MovieInfo_discription__zozrC\",\"title\":\"MovieInfo_title__oNnRW\",\"subtitle\":\"MovieInfo_subtitle__abe21\",\"subsubtitle\":\"MovieInfo_subsubtitle__B8DFj\",\"text\":\"MovieInfo_text__g5gK6\",\"list\":\"MovieInfo_list__i7jw8\",\"item\":\"MovieInfo_item__ZxVDU\",\"navLink\":\"MovieInfo_navLink__Plh0I\",\"activeLink\":\"MovieInfo_activeLink__SsWBN\"};","import { useEffect, useState } from 'react';\nimport { NavLink, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchMovieById } from '../../utils/fetch-api';\nimport s from './MovieInfo.module.css';\n\nconst setActiveLinkClass = ({ isActive }) =>\n  isActive ? `${s.navLink} ${s.activeLink}` : s.navLink;\n\nconst MovieInfo = () => {\n  const location = useLocation();\n  let { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovieById(movieId)\n      .then(movieDetails => setMovieDetails(movieDetails))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <div className={s.container}>\n      <button\n        type=\"button\"\n        className={s.btn}\n        onClick={() => navigate(location.state)}\n      >\n        <span>&laquo; Go back</span>\n      </button>\n      {movieDetails && (\n        <div className={s.containerMovie}>\n          <div className={s.thumb}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movieDetails['poster_path']}`}\n              alt={movieDetails.title}\n              className={s.poster}\n            />\n          </div>\n          <div className={s.discription}>\n            <h1 className={s.title}>\n              {movieDetails.title} ({movieDetails['release_date'].split('-')[0]}\n              )\n            </h1>\n            <p className={s.text}>\n              User score: {Math.round(movieDetails['vote_average'])}%\n            </p>\n            <h2 className={s.subtitle}>Overview</h2>\n            <p className={s.text}>{movieDetails.overview}</p>\n            <h3 className={s.subsubtitle}>Genres</h3>\n            <p className={s.text}>\n              {movieDetails.genres.map(el => el.name).join(' ')}\n            </p>\n          </div>\n        </div>\n      )}\n      <div className={s.containerAdditionalInfo}>\n        <ul className={s.list}>\n          Additional information\n          <li className={s.item}>\n            <NavLink\n              to={`/movie/${movieId}/credits`}\n              state={location.state}\n              className={setActiveLinkClass}\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li className={s.item}>\n            <NavLink\n              to={`/movie/${movieId}/reviews`}\n              state={location.state}\n              className={setActiveLinkClass}\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport MovieInfo from '../components/MovieInfo/MovieInfo.jsx';\n\nconst MovieDetails = () => {\n  return (\n    <>\n      <MovieInfo />\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '905309a28b68a9146011759181c1a3d1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = () => {\n  return axios\n    .get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n\nexport const fetchQueriedMovies = query => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n\nexport const fetchMovieById = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport const fetchCastForMovie = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.cast)\n    .catch(error => console.log(error));\n};\n\nexport const fetchReviewsForMovie = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        movie_id,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n"],"names":["setActiveLinkClass","isActive","s","location","useLocation","movieId","useParams","useState","movieDetails","setMovieDetails","navigate","useNavigate","useEffect","fetchMovieById","then","catch","err","console","log","className","type","onClick","state","src","alt","title","split","Math","round","overview","genres","map","el","name","join","to","Suspense","fallback","API_KEY","axios","fetchTrendingMovies","params","api_key","response","data","results","error","fetchQueriedMovies","query","movie_id","fetchCastForMovie","cast","fetchReviewsForMovie"],"sourceRoot":""}