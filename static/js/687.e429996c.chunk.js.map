{"version":3,"file":"static/js/687.e429996c.chunk.js","mappings":"8NACA,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA0F,2BAA1F,EAA+H,6B,SCkC/H,EA9BoB,WAClB,IAAMA,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBN,GAASO,MAAK,SAAAJ,GAAc,OAC/CC,EAAkBD,EAD6B,GAGlD,GAAE,CAACH,KAGF,eAAIQ,UAAWC,EAAf,SAC6B,IAA1BN,EAAeO,OACdP,EAAeQ,KAAI,SAAAC,GACjB,OACE,gBAAIJ,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,qBAAiCG,EAAGC,WACpC,cAAGL,UAAWC,EAAd,SAA0BG,EAAGE,YAGlC,KAED,eAAIN,UAAWC,EAAf,UACE,cAAGD,UAAWC,EAAd,0DAKT,EC3BD,EAJgB,WACd,OAAO,SAAC,EAAD,GACR,C,8KCFKM,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAsB,WACjC,OAAOD,IAAAA,IACA,sBAAuB,CAC1BE,OAAQ,CACNC,QAASJ,KAGZR,MAAK,SAAAa,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEYG,EAAqB,SAAAC,GAChC,OAAOZ,IAAAA,IACA,gBAAiB,CACpBE,OAAQ,CACNC,QAASJ,EACTa,MAAAA,KAGHrB,MAAK,SAAAa,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEYK,EAAiB,SAAAC,GAC5B,OAAOd,IAAAA,IAAA,iBACUc,GAAY,CACzBZ,OAAQ,CACNC,QAASJ,KAGZR,MAAK,SAAAa,GAAQ,OAAIA,EAASC,IAAb,GACjB,EAEYU,EAAoB,SAAAD,GAC/B,OAAOd,IAAAA,IAAA,iBACUc,EADV,YAC8B,CACjCZ,OAAQ,CACNC,QAASJ,KAGZR,MAAK,SAAAa,GAAQ,OAAIA,EAASC,KAAKW,IAAlB,IACbT,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEYlB,EAAuB,SAAAwB,GAClC,OAAOd,IAAAA,IAAA,iBACUc,EADV,YAC8B,CACjCZ,OAAQ,CACNC,QAASJ,EACTe,SAAAA,KAGHvB,MAAK,SAAAa,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,C","sources":["webpack://goit-react-hw-05-movies/./src/components/ReviewsInfo/ReviewsInfo.module.css?3f3d","components/ReviewsInfo/ReviewsInfo.jsx","pages/Reviews.js","utils/fetch-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ReviewsInfo_list__sh+xR\",\"item\":\"ReviewsInfo_item__RDLoT\",\"title\":\"ReviewsInfo_title__dcHdK\",\"content\":\"ReviewsInfo_content__kARRR\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsForMovie } from '../../utils/fetch-api';\nimport s from './ReviewsInfo.module.css';\n\nconst ReviewsInfo = () => {\n  let { movieId } = useParams();\n  const [reviewsDetails, setReviewsDetails] = useState([]);\n\n  useEffect(() => {\n    fetchReviewsForMovie(movieId).then(reviewsDetails =>\n      setReviewsDetails(reviewsDetails)\n    );\n  }, [movieId]);\n\n  return (\n    <ul className={s.list}>\n      {reviewsDetails.length !== 0 ? (\n        reviewsDetails.map(el => {\n          return (\n            <li className={s.item}>\n              <h2 className={s.title}>Author: {el.author}</h2>\n              <p className={s.content}>{el.content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <li className={s.item}>\n          <p className={s.content}>We don't have any reviews for this movie.</p>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default ReviewsInfo;\n","import ReviewsInfo from '../components/ReviewsInfo/ReviewsInfo.jsx';\n\nconst Reviews = () => {\n  return <ReviewsInfo />;\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '905309a28b68a9146011759181c1a3d1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = () => {\n  return axios\n    .get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n\nexport const fetchQueriedMovies = query => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n\nexport const fetchMovieById = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport const fetchCastForMovie = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.cast)\n    .catch(error => console.log(error));\n};\n\nexport const fetchReviewsForMovie = movie_id => {\n  return axios\n    .get(`/movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        movie_id,\n      },\n    })\n    .then(response => response.data.results)\n    .catch(error => console.log(error));\n};\n"],"names":["movieId","useParams","useState","reviewsDetails","setReviewsDetails","useEffect","fetchReviewsForMovie","then","className","s","length","map","el","author","content","API_KEY","axios","fetchTrendingMovies","params","api_key","response","data","results","catch","error","console","log","fetchQueriedMovies","query","fetchMovieById","movie_id","fetchCastForMovie","cast"],"sourceRoot":""}